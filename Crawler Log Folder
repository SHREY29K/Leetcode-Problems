--------------------------------------------------------------------------------- LEETCODE PROBLEM NO. 1598 -----------------------------------------------------------------------------------------

Q) The Leetcode file system keeps a log each time some user performs a change folder operation.
The operations are described below:

"../" : Move to the parent folder of the current folder. (If you are already in the main folder, remain in the same folder).
"./" : Remain in the same folder.
"x/" : Move to the child folder named x (This folder is guaranteed to always exist).
You are given a list of strings logs where logs[i] is the operation performed by the user at the ith step.

The file system starts in the main folder, then the operations in logs are performed.
Return the minimum number of operations needed to go back to the main folder after the change folder operations.

Example 1:

Input: logs = ["d1/","d2/","../","d21/","./"]
Output: 2
Explanation: Use this change folder operation "../" 2 times and go back to the main folder.

Example 2:

Input: logs = ["d1/","d2/","./","d3/","../","d31/"]
Output: 3

Example 3:

Input: logs = ["d1/","../","../","../"]
Output: 0

Code Explanation: 
This might be one of the most easiest question in the July Month daily coding challenge on Leetcode. Simple iteration and checking needs to be done for mainly
two characters '../' & './' 

If while iterating inside the String array , we find our pointer equal to "../", means it must be at the base directory, 
or inside the first daughter of the base directory . But this would mean we need to check for whether the flag > 0, while iteration if yes then it's inside on of the
daughter directories of the base file.

if !"./", then we should increment the pointer.

Code:
class Solution {
    public int minOperations(String[] logs) {
        int insideFolder = 0;
        for(String log : logs){
            if(log.equals("../")){
                if(insideFolder > 0) {
                    insideFolder -= 1;
                }
            } else if(!log.equals("./")){
                insideFolder += 1;
            }
        }
        return insideFolder;
    }
}
